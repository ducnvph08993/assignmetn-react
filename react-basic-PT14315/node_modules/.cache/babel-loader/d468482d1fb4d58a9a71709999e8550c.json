{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-basic-PT14315\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport apiRequest from './api/productApi';\nimport apiRequestCate from './api/categoryApi';\nimport dataFake from './dataFake';\nimport Routers from './routers';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n        setCategories(data);\n      } catch (error) {\n        console.log('You have an error: ', error);\n      }\n    };\n\n    getProducts();\n    getCategories(); // const getCategories = async () => {\n    //   try {\n    //     const { data } = await apiRequest.getCate();\n    //     setCategories(data);\n    //   } catch (error) {\n    //     console.log('You have an error: ', error);\n    //   }\n    // }\n  }, []);\n\n  const onHandleRemove = async id => {\n    try {\n      await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log('You have an error', error);\n    }\n  };\n\n  const onHandleRemoveCate = async id => {\n    try {\n      await apiRequestCate.remove(id);\n      const newCategories = categories.filter(category => category.id !== id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log('You have an error', error);\n    }\n  };\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data, data.image]);\n    } catch (error) {\n      console.log('You have an error', error);\n    }\n  };\n\n  const onHandleEdit = newProduct => {\n    try {\n      apiRequest.update(newProduct.id, newProduct);\n      const editedProduct = products.map(product => product.id === newProduct.id ? newProduct : product);\n      localStorage.setItem('products', JSON.stringify(editedProduct));\n      setProducts(editedProduct);\n    } catch (error) {\n      console.log('You have an error', error);\n    }\n  };\n\n  const onHandleAddCate = async category => {\n    try {\n      const {\n        data\n      } = await apiRequestCate.create(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log('You have an error', error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onEdit: onHandleEdit,\n    categories: categories,\n    onAddCate: onHandleAddCate,\n    onRemoveCate: onHandleRemoveCate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App; // check props.curentProduct mà undefined thì call api rồi hiển thị ra xem sao\n// kiểu như này \n// if (currentCategory) {\n//                 setCategoryName(currentCategory.name);\n//                 setCategoryDes(currentCategory.description);\n//             } else {\n//                 getCategory(categoryId).then(\n//                     (res) => {\n//                         if (res.status === 200) {\n//                             currentCategory = res.data;\n//                             setCategoryName(currentCategory.name);\n//                             setCategoryDes(currentCategory.description);\n// đặt trong useEffect(() => {}, [])\n// category/:id\n// const listProduct = products.filter(product => product.cateId === id)\n// category\n// {\n//   id: 1,\n//   name: 'nước hoa'\n//   }\n//   // product\n//   {\n//   id: 1, \n//   cateId: 1,\n//   name: 'Sản phẩm nước hoa 1'\n//   },\n//   {\n//   id: 2, \n//   cateId: 1,\n//   name: 'Sản phẩm nước hoa 1'\n//   }\n//   Lê Trọng Đạt (FPL HN)10:04\n//   uncategory","map":{"version":3,"sources":["D:/react-basic-PT14315/src/App.js"],"names":["React","useState","useEffect","apiRequest","apiRequestCate","dataFake","Routers","BrowserRouter","Router","Switch","Route","Link","App","products","setProducts","categories","setCategories","getProducts","data","getAll","error","console","log","getCategories","onHandleRemove","id","remove","newProducts","filter","product","onHandleRemoveCate","newCategories","category","onHandleAdd","create","image","onHandleEdit","newProduct","update","editedProduct","map","localStorage","setItem","JSON","stringify","onHandleAddCate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport apiRequest from './api/productApi';\nimport apiRequestCate from './api/categoryApi';\nimport dataFake from './dataFake';\nimport Routers from './routers'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nfunction App() {\n\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n        setCategories(data);\n      } catch (error) {\n        console.log('You have an error: ', error);\n      }\n    }\n    getProducts();\n    getCategories();\n    // const getCategories = async () => {\n    //   try {\n    //     const { data } = await apiRequest.getCate();\n    //     setCategories(data);\n    //   } catch (error) {\n    //     console.log('You have an error: ', error);\n    //   }\n    // }\n\n  }, [])\n\n  const onHandleRemove = async (id) => {\n    try {\n      await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log('You have an error', error)\n    }\n  }\n  const onHandleRemoveCate = async (id) => {\n    try {\n      await apiRequestCate.remove(id);\n      const newCategories = categories.filter(category => category.id !== id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log('You have an error', error)\n    }\n  }\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await apiRequest.create(product);\n      setProducts([\n        ...products,\n        data,\n        data.image\n      ])\n    } catch (error) {\n      console.log('You have an error', error)\n    }\n\n  }\n  const onHandleEdit = (newProduct) => {\n    try {\n      apiRequest.update(newProduct.id, newProduct);\n      const editedProduct = products.map(product => (\n        product.id === newProduct.id ? newProduct : product\n      ));\n      localStorage.setItem('products', JSON.stringify(editedProduct));\n      setProducts(editedProduct);\n    } catch (error) {\n      console.log('You have an error', error)\n    }\n  }\n  const onHandleAddCate = async (category) => {\n    try {\n      const { data } = await apiRequestCate.create(category);\n      setCategories([\n        ...categories,\n        data\n      ])\n    } catch (error) {\n      console.log('You have an error', error)\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Routers\n        products={products}\n        onRemove={onHandleRemove}\n        onAdd={onHandleAdd}\n        onEdit={onHandleEdit}\n        categories={categories}\n        onAddCate={onHandleAddCate}\n        onRemoveCate={onHandleRemoveCate}\n      />\n    </div>\n  )\n\n}\nexport default App;\n// check props.curentProduct mà undefined thì call api rồi hiển thị ra xem sao\n// kiểu như này \n// if (currentCategory) {\n//                 setCategoryName(currentCategory.name);\n//                 setCategoryDes(currentCategory.description);\n//             } else {\n//                 getCategory(categoryId).then(\n//                     (res) => {\n//                         if (res.status === 200) {\n//                             currentCategory = res.data;\n//                             setCategoryName(currentCategory.name);\n//                             setCategoryDes(currentCategory.description);\n\n// đặt trong useEffect(() => {}, [])\n\n// category/:id\n// const listProduct = products.filter(product => product.cateId === id)\n\n// category\n\n// {\n//   id: 1,\n//   name: 'nước hoa'\n//   }\n\n//   // product\n\n//   {\n//   id: 1, \n//   cateId: 1,\n//   name: 'Sản phẩm nước hoa 1'\n//   },\n//   {\n//   id: 2, \n//   cateId: 1,\n//   name: 'Sản phẩm nước hoa 1'\n//   }\n//   Lê Trọng Đạt (FPL HN)10:04\n//   uncategory"]},"metadata":{},"sourceType":"module"}